#!/usr/bin/env bash

GPU_ARG="%-5s"
NAME_ARG="%-21s"
UTIL_ARG="%-6s"
MEM_ARG="%-9s"
NUM_PROC_ARG="%-7s"

UNDERLINE="\033[4m"
GREEN="\033[32m"
RED="\033[31m"
RESET="\033[0m"

printf "\n"
printf "  "
printf "${UNDERLINE}"
printf "${GPU_ARG}" "GPU"
printf "${NAME_ARG}" "Name"
printf "${UTIL_ARG}" "Util"
printf "${MEM_ARG}" "Used"
printf "${MEM_ARG}" "Free"
printf "${NUM_PROC_ARG}" "#Proc"
printf "${RESET}"
printf "\n"

function nvidia_info ()
{
  SMI=nvidia-smi
  Q_GPU=uuid,index,name,utilization.gpu,fan.speed,memory.used,memory.free
  Q_COMPUTE_APPS=gpu_uuid
  FORMAT=csv,noheader,nounits
  GPU_INFO=$(${SMI} --format=${FORMAT} --query-gpu=${Q_GPU})
  PROCESSES=$(${SMI} --format=${FORMAT} --query-compute-apps=${Q_COMPUTE_APPS})

  echo "${GPU_INFO}" | while IFS=',' read -a line; do
    line[2]=${line[2]/NVIDIA /} # remove NVIDIA from GPU Name
    printf "  "
    printf "${GPU_ARG}" "${line[1]}"
    printf "${NAME_ARG}" "${line[2]:1:20}"
    if [ "${line[3]}" -gt 85 ]; then
      printf "${RED}"
    else
      printf "${GREEN}"
    fi
    printf "${UTIL_ARG}${RESET}" "${line[3]:1}%"
    printf "${MEM_ARG}" "${line[5]:1}M"
    printf "${MEM_ARG}" "${line[6]:1}M"
    uuid="${line[0]}"
    echo "${PROCESSES}" | grep "${uuid}" | wc -l
  done
}

# get the GPU Marketing Name
function gpu_name ()
{
  local GID=$(printf "%016x\n" $1)
  ${INFO} | awk -v gid=$GID '$0~gid {getline;print}' | { IFS=':' read -a line; echo ${line[1]}; }
}

function amd_info ()
{
  SMI=rocm-smi
  INFO=rocminfo
  Q_GPU="--showuse --showmeminfo vram --showuniqueid --csv"
  SKIP_TAIL="head -n -1"
  GPU_INFO=$(${SMI} ${Q_GPU} | ${SKIP_TAIL})
  PROCESSES=$(${SMI} --showpidgpus | grep -v PID)

  FIRST=1
  declare -A COL
  echo "${GPU_INFO}" | while IFS=',' read -a line; do
    if (( FIRST )) ; then  # record the field name and index
      FIRST=0
      for (( i=0; i < ${#line[@]} ; i++ )) ; do
        COL[${line[$i]}]=$i
      done
      continue
    fi

    if [[ ${line[1]} == "N/A" ]] ; then  # skip the integrated GPU
      continue
    fi

    GUID=${COL["Unique ID"]}
    UTIL=${COL["GPU use (%)"]}
    MEM_USED=${COL["VRAM Total Used Memory (B)"]}
    MEM_TOT=${COL["VRAM Total Memory (B)"]}

    line[0]=${line[0]/card/}
    line[${GUID}]=$(gpu_name ${line[${GUID}]})
    line[${GUID}]=${line[${GUID}]/AMD /}
    line[${MEM_USED}]=$(( ${line[${MEM_USED}]} / 1024 / 1024 ))
    line[${MEM_TOT}]=$(( ${line[${MEM_TOT}]} / 1024 / 1024 ))

    printf "  "
    printf "${GPU_ARG}" "${line[0]}"
    printf "${NAME_ARG}" "${line[ ${GUID} ]}"
    if [ "${line[ ${UTIL} ]}" -gt 85 ]; then
      printf "${RED}"
    else
      printf "${GREEN}"
    fi
    printf "${UTIL_ARG}${RESET}" "${line[ ${UTIL} ]}%"
    printf "${MEM_ARG}" "${line[ ${MEM_USED} ]}M"
    printf "${MEM_ARG}" "${line[ ${MEM_TOT} ]}M"
    uuid="${line[0]}"
    echo "${PROCESSES}" | grep "${uuid}" | wc -l
  done
}

type nvidia-smi &> /dev/null && nvidia_info
type rocm-smi &> /dev/null && amd_info

exit 0
